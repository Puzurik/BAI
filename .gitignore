
import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.neighbors import KNeighborsRegressor
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error, r2_score
from statsmodels.tsa.api import SARIMAX
from sklearn.preprocessing import LabelEncoder
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Загрузка данных
import kagglehub
path = kagglehub.dataset_download("mikhailklemin/kinopoisks-movies-reviews")
dataset_path = os.path.join(path, "your_dataset_file.csv")  # замените на имя файла из датасета
df = pd.read_csv(dataset_path)

# Предварительная обработка данных
df = df.dropna()  # удаляем пропущенные значения
df['rating'] = df['rating'].astype(float)  # преобразуем рейтинг в числовой формат

# Разделение данных
X = df.drop(columns=['rating'])  # независимые переменные
y = df['rating']  # целевая переменная
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Пример 1: Линейная регрессия
linear_model = LinearRegression()
linear_model.fit(X_train, y_train)
y_pred_linear = linear_model.predict(X_test)
print("Linear Regression R2 Score:", r2_score(y_test, y_pred_linear))

# Пример 2: K-ближайших соседей
knn_model = KNeighborsRegressor(n_neighbors=5)
knn_model.fit(X_train, y_train)
y_pred_knn = knn_model.predict(X_test)
print("KNN R2 Score:", r2_score(y_test, y_pred_knn))

# Пример 3: Дерево решений
tree_model = DecisionTreeRegressor()
tree_model.fit(X_train, y_train)
y_pred_tree = tree_model.predict(X_test)
print("Decision Tree R2 Score:", r2_score(y_test, y_pred_tree))

# Пример 4: SARIMA
# Предположим, что данные имеют временную компоненту
sarima_model = SARIMAX(y_train, order=(1, 1, 1), seasonal_order=(1, 1, 1, 12))
sarima_results = sarima_model.fit()
sarima_forecast = sarima_results.forecast(steps=len(y_test))
print("SARIMA R2 Score:", r2_score(y_test, sarima_forecast))

# Пример 5: Нейронная сеть
nn_model = Sequential([
    Dense(64, activation='relu', input_dim=X_train.shape[1]),
    Dense(32, activation='relu'),
    Dense(1)
])
nn_model.compile(optimizer='adam', loss='mean_squared_error')
nn_model.fit(X_train, y_train, epochs=10, batch_size=32, verbose=1)
y_pred_nn = nn_model.predict(X_test)
print("Neural Network R2 Score:", r2_score(y_test, y_pred_nn))

# Построение графиков
plt.figure(figsize=(10, 6))
plt.plot(y_test.values[:100], label="True Values")
plt.plot(y_pred_linear[:100], label="Linear Regression Predictions")
plt.legend()
plt.show()

# Вывод результатов
results = {
    "Model": ["Linear Regression", "KNN", "Decision Tree", "SARIMA", "Neural Network"],
    "R2 Score": [
        r2_score(y_test, y_pred_linear),
        r2_score(y_test, y_pred_knn),
        r2_score(y_test, y_pred_tree),
        r2_score(y_test, sarima_forecast),
        r2_score(y_test, y_pred_nn)
    ]
}
results_df = pd.DataFrame(results)
print(results_df)

И файлы: пример отчета, шаблон
